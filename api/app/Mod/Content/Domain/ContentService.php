<?php
namespace App\Mod\Content\Domain;

use App\Domain\BaseService;
use Symfony\Component\HttpFoundation\Request;
use App\Mod\Content\Domain\Models\Content;
use App\Mod\ContentModel\Domain\Models\ContentModel;
use Illuminate\Support\Facades\Route;

/**
 * @property Content $model
 * @property ContentModel $contentModel 
 */
class ContentService extends BaseService
{
    protected $contentModel;

    public function __construct(Content $model)
    {
        parent::__construct($model);
        
        // Content Modelの取得
        $route = Route::current();
        $modelName = $route->parameter('model_name');
        if (!$modelName) {
            abort(404);
        }
        $contentModel = ContentModel::where('alias', $modelName)->first();
        if (!$contentModel) {
            abort(404);
        }
        $this->contentModel = $contentModel;
    }

    public function findList(Request $request, ?int $limit = null, array $with = []): array
    {
        if (!$limit) {
            $limit = config('content.list.limit');
        }
        return parent::findList($request, $limit, $with); // TODO: Change the autogenerated stub
    }

    protected function beforeSave($request, $post, &$inputs): void
    {
        // Content Valueに保存するため、fieldの入力値は破棄
        foreach ($this->contentModel->fields as $key => $field) {
            unset($inputs[$field['field_id']]);
        }

        // model idの追加
        $inputs['model_id'] = $this->contentModel->id;
    }

    protected function afterSave($request, $post): void
    {
        // Content Valueの保存
        foreach ($this->contentModel->fields as $key => $field) {
            $inputVal = $request->input($field['field_id']);
            $values = [
                'field_id' => $field->id,
                'value' => $inputVal
            ];
            $post->values()->updateOrCreate(
                ['field_id' => $values['field_id']],
                $values
            );
        }
    }

    protected function appendCriteria($criteria = [], $query): void
    {
        // デフォルトでmodelでフィルター
        $query->where('model_id', $this->contentModel->id);
        parent::appendCriteria($criteria, $query);
    }

    protected function validateRequest(Request $request, mixed $post = null): void
    {
        // contentModelのfieldsのうち、is_requiredがtrueのものを必須バリデーション
        $fields = $this->contentModel->fields ?? [];
        $rules = [];
        $message = [];
        foreach ($fields as $field) {
            if (!empty($field['is_required'])) {
                // field_idをキーに必須バリデーション
                $rules[$field['field_id']] = ['required'];
                $message["{$field['field_id']}.required"] = "{$field['name']}は必須項目です。";
            }
        }
        if (!empty($rules)) {
            $request->validate($rules, $message);
        }
    }
}
